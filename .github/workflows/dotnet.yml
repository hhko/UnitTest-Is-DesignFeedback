name: Build

on:
  push:
    branches: [ main ]
    paths-ignore:
    - 'README.md'
    - 'TODO.md'
  pull_request:
    branches: [ main ]

env:
  SOLUTION_FILE_PATH: ./Part2/Ch02/Step01/MultipleUnitTests.sln
  BUILD_CONFIGURATION: Release

jobs:
  build:

    runs-on: ubuntu-latest
    strategy:
      matrix:
        dotnet-version: [ '6.0']
        include:
        - dotnet-version: '6.0'
          install-3: false
          install-5: false
          display-name: '.NET 6.0'
          framework: 'net6.0'
          prefix: 'net6'

    steps:
      - uses: actions/checkout@v2
      - name: Setup .NET Core SDK ${{ matrix.dotnet-version }}
        uses: actions/setup-dotnet@v1.7.2
        with:
          dotnet-version: ${{ matrix.dotnet-version }}
      - name: Display dotnet Version
        run: dotnet --version
      - name: Display Current Directory
        run: |
          pwd
          cd "${{ github.workspace }}/"
          pwd
      - name: Install Packages
        run: dotnet restore ${{env.SOLUTION_FILE_PATH}}
      - name: Build
        run: |
          dotnet build ${{env.SOLUTION_FILE_PATH}} \
            -c ${{env.BUILD_CONFIGURATION}} \
            --no-restore \
            --framework ${{ matrix.framework }}
      - name: Test
        #continue-on-error: true # proceed if tests fail, the report step will report the failure with more details.
        run: |
          dotnet test ${{env.SOLUTION_FILE_PATH}} \
            -c ${{env.BUILD_CONFIGURATION}} \
            --no-build \
            --verbosity normal \
            --framework ${{ matrix.framework }} \
            --logger "console;verbosity=detailed" \
            --logger "trx;LogFilePrefix=${{ matrix.prefix }}" \
            --results-directory "${{ github.workspace }}/TestResults" \
            /p:CollectCoverage=true \
            /p:CoverletOutputFormat=opencover
      - name: Display Outputs
        run: |
          ls "${{ github.workspace }}/TestResults" -l
      - name: Upload test coverage
        uses: codecov/codecov-action@v1
        with:
          flags: ${{ matrix.framework }}
